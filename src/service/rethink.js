// Generated by IcedCoffeeScript 108.0.9
(function() {
  var conn, err, iced, r, res, __iced_deferrals, __iced_k, __iced_k_noop;

  iced = require('iced-runtime');
  __iced_k = __iced_k_noop = function() {};

  r = require("rethinkdb");

  (function(_this) {
    return (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        filename: "/Users/tim/Projects/MividStack/src/service/rethink.coffee"
      });
      r.connect({
        host: "localhost",
        port: 28015
      }, __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            err = arguments[0];
            return conn = arguments[1];
          };
        })(),
        lineno: 2
      }));
      __iced_deferrals._fulfill();
    });
  })(this)((function(_this) {
    return function() {
      if (err) {
        throw err;
      }
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          filename: "/Users/tim/Projects/MividStack/src/service/rethink.coffee"
        });
        r.db("test").tableCreate("tv_shows").run(conn, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              return res = arguments[1];
            };
          })(),
          lineno: 4
        }));
        __iced_deferrals._fulfill();
      })(function() {
        if (err) {
          throw err;
        }
        console.log(res);
        r.table("tv_shows").insert({
          name: "Star Trek TNG"
        }).run(conn, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              return res = arguments[1];
            };
          })(),
          lineno: 7
        }));
        if (err) {
          throw err;
        }
        return console.log(res);
      });
    };
  })(this));

}).call(this);
